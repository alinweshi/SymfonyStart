# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  public_uploads_directory: "%kernel.project_dir%/public/uploads"
  brochures_directory: "%kernel.project_dir%/public/uploads/brochures"

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    # config/services.yaml
    # ...
    # Define SmsController as a service
  App\Controller\Sms\SmsController:
    # Specify the class of the controller
    class: App\Controller\Sms\SmsController
    # Tag the controller with controller.service_arguments
    tags: ["controller.service_arguments"]

  App\Service\FileUploader:
    arguments:
      $targetDirectory: "%brochures_directory%"
  App\MessageHandler\SmsNotificationHandler:
    tags: [messenger.message_handler]
  Twilio\Rest\Client:
    arguments:
      $username: "%env(TWILIO_ACCOUNT_SID)%"
      $password: "%env(TWILIO_AUTH_TOKEN)%"
      $accountSid: null
      $region: null
      $httpClient: null
      $environment: null
      $userAgentExtensions: null
    # or configure with options
    # tags:
    #     -
    #         name: messenger.message_handler
    #         # only needed if can't be guessed by type-hint
    #         handles: App\Message\SmsNotification
  App\Services\SmsService:
    arguments:
      $fromPhoneNumber: 01091092848 # Assuming TWILIO_PHONE_NUMBER is the environment variable for the sender phone number

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  app.menu_builder:
    class: App\Menu\MenuBuilder
    arguments: ["@knp_menu.factory"]

  app.main_menu:
    class: Knp\Menu\MenuItem # the service definition requires setting the class
    factory: ["@app.menu_builder", createMainMenu]
    arguments: ["@request_stack"]
    tags:
      - { name: knp_menu.menu, alias: main } # The alias is what is used to retrieve the menu

  # ...
  app.sidebar_menu:
    class: Knp\Menu\MenuItem
    factory: ["@app.menu_builder", createSidebarMenu]
    arguments: ["@request_stack"]
    tags:
      - { name: knp_menu.menu, alias: sidebar } # Named "sidebar" this time


  # config/services.yaml

  # ...
